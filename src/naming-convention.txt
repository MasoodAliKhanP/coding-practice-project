naming convention
extension of providers
unit testing

 Domain-driven design is not a technology or a methodology. DDD provides a structure of practices 
 and terminology for making design decisions that focus and accelerate software projects 
 dealing with complicated domains.

 domain/subject area: sales, transport, banking, games

 --
 oops - apie
 abstraction - dealing with interface`
 polymorphism - method overloadign, overriding
 inheritance	- extends
 encapsulation - wrapping data and methods in a class

 --
 solid principles
 single responsibility principle - 
 open / close principle - open for extension - closed for modification
 liskov substitution - Bird - flying bird - duck, ostrich
 interface segregation
 dependency injection

 --
 T -- t
 S extend T -- s


